name: Update proxy dependencies

on:
  schedule:
    - cron: '0 */4 * * *'
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Get current versions
        id: current
        run: |
          ss=$(grep -oP 'ARG SHADOWSOCKS_VERSION=\K.*' Dockerfile)
          tp=$(grep -oP 'ARG THREEPROXY_VERSION=\K.*' Dockerfile)
          ar=$(grep -oP 'ARG ARIA2_VERSION=\K.*' Dockerfile)
          echo "ss=$ss" >> "$GITHUB_OUTPUT"
          echo "tp=$tp" >> "$GITHUB_OUTPUT"
          echo "ar=$ar" >> "$GITHUB_OUTPUT"

      - name: Get latest releases
        id: latest
        run: |
          ss=$(curl -s https://api.github.com/repos/shadowsocks/shadowsocks-rust/releases/latest | jq -r '.tag_name')
          tp=$(curl -s https://api.github.com/repos/3proxy/3proxy/releases/latest | jq -r '.tag_name')
          ar=$(curl -s https://api.github.com/repos/aria2/aria2/releases/latest | jq -r '.tag_name')
          echo "ss=$ss" >> "$GITHUB_OUTPUT"
          echo "tp=$tp" >> "$GITHUB_OUTPUT"
          echo "ar=$ar" >> "$GITHUB_OUTPUT"

      - name: Update versions
        id: update
        run: |
          changed=0
          if [ "${{ steps.current.outputs.ss }}" != "${{ steps.latest.outputs.ss }}" ]; then
            sed -i "s/ARG SHADOWSOCKS_VERSION=.*/ARG SHADOWSOCKS_VERSION=${{ steps.latest.outputs.ss }}/" Dockerfile
            changed=1
          fi
          if [ "${{ steps.current.outputs.tp }}" != "${{ steps.latest.outputs.tp }}" ]; then
            sed -i "s/ARG THREEPROXY_VERSION=.*/ARG THREEPROXY_VERSION=${{ steps.latest.outputs.tp }}/" Dockerfile
            changed=1
          fi
          if [ "${{ steps.current.outputs.ar }}" != "${{ steps.latest.outputs.ar }}" ]; then
            sed -i "s/ARG ARIA2_VERSION=.*/ARG ARIA2_VERSION=${{ steps.latest.outputs.ar }}/" Dockerfile
            changed=1
          fi
          if [ $changed -eq 1 ]; then
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
            git commit -am "chore: update proxy dependencies"
            git push
            latest_tag=$(git tag --list 'v*' | sort -V | tail -n1)
            if [ -z "$latest_tag" ]; then
              new_tag=v1
            else
              ver=${latest_tag#v}
              new_tag=v$((ver + 1))
            fi
            git tag "$new_tag"
            git push origin "$new_tag"
            echo "tag=$new_tag" >> "$GITHUB_OUTPUT"
          fi

      - name: Trigger docker build workflow
        if: steps.update.outputs.tag
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'docker-build.yml',
              ref: '${{ steps.update.outputs.tag }}'
            })
